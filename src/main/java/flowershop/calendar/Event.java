package flowershop.calendar;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

import java.time.LocalDateTime;

/**
 * The {@code Event} class represents an event in the calendar system.
 * It is a JPA entity mapped to the database and contains details about an event
 * such as its ID, name, date, and description.
 */
@Entity
public class Event {

	/**
	 * The unique identifier for the event.
	 * It is automatically generated by the database.
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Long id;

	/**
	 * The name/title of the event.
	 */
	private String name;

	/**
	 * The date and time of the event.
	 */
	private LocalDateTime date;

	/**
	 * A description providing more details about the event.
	 */
	private String description;

	/**
	 * Default constructor for {@code Event}.
	 * Required by JPA.
	 */
	public Event() {
	}

	/**
	 * Constructs a new {@code Event} with the specified details.
	 *
	 * @param id          The unique identifier for the event.
	 * @param name        The name/title of the event.
	 * @param date        The date and time of the event.
	 * @param description A description providing more details about the event.
	 */
	public Event(Long id, String name, LocalDateTime date, String description) {
		this.id = id;
		this.name = name;
		this.date = date;
		this.description = description;
	}

	/**
	 * Returns the unique identifier of the event.
	 *
	 * @return The event ID.
	 */
	public Long getId() {
		return id;
	}

	/**
	 * Sets the unique identifier of the event.
	 *
	 * @param id The new event ID.
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Returns the name/title of the event.
	 *
	 * @return The event name.
	 */
	public String getName() {
		return name;
	}

	/**
	 * Sets the name/title of the event.
	 *
	 * @param name The new event name.
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Returns the date and time of the event.
	 *
	 * @return The event date and time.
	 */
	public LocalDateTime getDate() {
		return date;
	}

	/**
	 * Sets the date and time of the event.
	 *
	 * @param date The new date and time for the event.
	 */
	public void setDate(LocalDateTime date) {
		this.date = date;
	}

	/**
	 * Returns a description of the event.
	 *
	 * @return The event description.
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * Sets a description of the event.
	 *
	 * @param description The new event description.
	 */
	public void setDescription(String description) {
		this.description = description;
	}
}